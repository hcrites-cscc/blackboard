============================================
Identify specific location of all blog and journal entry file embeds
============================================
 * @author  hcrites@cscc.edu (Heather Crites)
 * @created 06/15/2018	
 * @updated 02/26/2021
============================================




============================================
Notes:
============================================
This query targets file embeds in blog and journal entries.  It is useful for identifying files in use by location, cross-linked content (files in course home directories being used by other courses) and missing files (files which have been deleted but are still being referenced).

Blog and journal entries share the same table: blog_entry.

SaaS DDA uses multiple databases for cms_doc and the base schemas. To connect the two databases, I use the dblink function in PostgreSQL. If your instance does not have this installed, open a ticket to request it.

In the query, replace the following variables with your institution-specific values:
	[your_saas_schema]: use your specific SaaS schema value
	[your_dda_username]: use your DDA username
	[your_dda_password]: use your DDA password
	
To narrow down the query by specific course, there are two elements to adjust:
	[course_pk1]: enter the specific course_main.pk1 value to look up a specific course
	[file_location]: enter the specific xyf_urls.full_path value to look up a specific location

Searching a specific file location will run much quicker than searching all of xyf_urls.




============================================
Returns:
============================================
  COURSE_PK1: the pk1 value of the course
  CONTENT_PK1: the pk1 value of the content
  CNTHNDLR_HANDLE: a hard-coded 'Blog or Journal Entry' to identify the type of content
  TITLE: the title of the blog or journal entry
  COURSE_ID: the course_id of the course
  URL_COUNT: the number of files found in the blog or journal entry
  XID: the Xythos ID number found in the body of the blog or journal entry
  ENTRY_ID: the Xythos ID number of the embedded file
  FULL_PATH: the web folder file location of the embedded file
  DESCRIPTION: the full body of the blog or journal entry
  
  	
	

	
============================================
Query:
============================================
select blog.course_pk1
	, blog.content_pk1
	, blog.cnthndlr_handle
	, blog.title
	, blog.course_id
	, blog.url_count
	, xyf_files.xid
	, xyf_files.entry_id
	, xyf_files.full_path
	, blog.description	    
from (
	select course_main.pk1 as course_pk1
		, blog_entry.pk1 as content_pk1
		, 'Blog or Journal Entry' as cnthndlr_handle
		, blog_entry.title
		, course_main.course_id
		, (length(blog_entry.description) - length(replace(blog_entry.description, 'bbcswebdav', '')) )::int / length('bbcswebdav') as url_count
		, array_to_string(regexp_matches(blog_entry.description, 'bbcswebdav([^\s"''<\)]+)','g'), '') as xid
		, blog_entry.description
	from blog_entry
	left outer join blogs on blog_entry.blog_pk1 = blogs.pk1 	
	left outer join course_main on blogs.crsmain_pk1 = course_main.pk1 	
    where (course_main.pk1 in ([course_pk1]))
) as blog
left outer join (    
    select *
    from dblink('dbname=[your_saas_schema]_cms_doc user=[your_dda_username] password=[your_dda_password]', 'select xyf_files.entry_id, xyf_urls.full_path from xyf_files left outer join xyf_urls on xyf_files.file_id = xyf_urls.file_id where xyf_urls.full_path like ''[file_location]%''')
    as xyf_files(entry_id int, full_path text)
) as xyf_files on blog.xid = '/xid-'||cast(xyf_files.entry_id as text)||'_1'    
