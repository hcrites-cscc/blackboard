============================================
Identify specific location of all content file attachments
============================================
 * @author  hcrites@cscc.edu (Heather Crites)
 * @created 06/15/2018	
 * @updated 02/17/2021
============================================




============================================
Notes:
============================================
This query targets file attachments in items found in course_contents.  It is useful for identifying files in use by location, cross-linked content (files in course home directories being used by other courses) and missing files (files which have been deleted but are still being referenced).

SaaS DDA uses multiple databases for cms_doc and the base schemas. To connect the two databases, I use the dblink function in PostgreSQL. If your instance does not have this installed, open a ticket to request it.

In the query, replace the following variables with your institution-specific values:
	[your_saas_schema]: use your specific SaaS schema value
	[your_dda_username]: use your DDA username
	[your_dda_password]: use your DDA password
	
To narrow down the query by specific course, there are two elements to adjust:
	[course_pk1]: enter the specific course_main.pk1 value to look up a specific course
	[file_location]: enter the specific xyf_urls.full_path value to look up a specific location

Searching a specific file location will run much quicker than searching all of xyf_urls. If you do limit it to a specific file location, I recommend adding a filter at the end of the query to only display objects which are linking to that file location (e.g. "where xyf_files.entry_id is not null").




============================================
Returns:
============================================
  COURSE_PK1: the pk1 value of the course
  CONTENT_PK1: the pk1 value of the content
  CNTHNDLR_HANDLE: the course_contents.cnthndlr_handle value to identify the type of content
  TITLE: the title of the content
  COURSE_ID: the course_id of the course
  LINK_NAME: the link name chosen for the attached file
  EXTENSION: the file extension on the file
  XID: the Xythos ID number of the file attachment
  FULL_PATH: the web folder file location
  FILE_SIZE: the file size of the attachment
  DTMODIFIED: the date in which the attachment was last modified
    	
	

	
============================================
Query:
============================================
select course_main.pk1 as course_pk1
    , course_contents.pk1 as content_pk1
    , course_contents.cnthndlr_handle
    , course_contents.title
	, course_main.course_id
    , files.link_name
    , substring(xyf_files.file_name from '\.([^\.]*)$') as extension
    , case when substr(files.file_name,1,1) = '/' then replace(replace(files.file_name,'/xid-',''), '_1','') else '0' end as xid
    , xyf_files.full_path
    , files.file_size
    , files.dtmodified
from course_contents_files 
left outer join files on course_contents_files.files_pk1 = files.pk1 
left outer join course_contents on course_contents_files.course_contents_pk1 = course_contents.pk1 
left outer join course_main on course_contents.crsmain_pk1 = course_main.pk1  
left outer join ( 
    select *
    from dblink('dbname=[your_saas_schema]_cms_doc user=[your_dda_username] password=[your_dda_password]', 'select xyf_files.entry_id, xyf_urls.full_path from xyf_files left outer join xyf_urls on xyf_files.file_id = xyf_urls.file_id where xyf_urls.full_path like ''[file_location]%''')
    as xyf_files(entry_id int, file_name text, full_path text)
) as xyf_files on files.file_name = '/xid-'||cast(xyf_files.entry_id as text)||'_1' 
where course_main.pk1 in ([course_pk1])
